--- configure.ac
+++ configure.ac
@@ -719,6 +719,7 @@
         -L*)
 	  lib=`echo ${arg} | sed "s/^-L//"`
 	  R_SH_VAR_ADD(R_LD_LIBRARY_PATH, [${lib}], [${PATH_SEPARATOR}])
+          R_SH_VAR_ADD(RPATH_LDFLAGS, [-Wl,-rpath,${lib}])
 	  ;;
       esac
     done
@@ -744,7 +745,13 @@
 else
   eval "${Rshlibpath_var}=\"${R_LD_LIBRARY_PATH}${PATH_SEPARATOR}\${${Rshlibpath_var}}\""
 fi
-eval "export ${Rshlibpath_var}"
+case "${host_os}" in
+  linux*)
+    ;;
+  *)
+    eval "export ${Rshlibpath_var}"
+    ;;
+esac
 AC_SUBST(Rshlibpath_var)
 
 ## record how to strip shared/dynamic libraries.
@@ -1692,6 +1699,7 @@
 
 AC_SUBST(MAIN_LD)
 AC_SUBST(MAIN_LDFLAGS)
+AC_SUBST(RPATH_LDFLAGS)
 AC_SUBST(CPICFLAGS)
 AC_SUBST(CXXPICFLAGS)
 AC_SUBST(DYLIB_LD)
--- etc/ldpaths.in
+++ etc/ldpaths.in
@@ -1,3 +1,17 @@
+# https://github.com/conda/conda/issues/1679:
+#  Internally R_system() calls system() which
+# uses /bin/sh to launch various programs. If
+# /bin/sh is called with LD_LIBRARY_PATH that
+# loads condas shared libraries things break.
+#  It may be that not setting LD_LIBRARY_PATH
+# causes other things to break, in which case
+# R_system() will need to be modified so that
+# it calls execve() with an environment which
+# has these modifications to LD_LIBRARY_PATH
+# removed which may be tricky to orchestrate
+if [ "$(uname -s)" = "Linux" ]; then
+  return 0
+fi
 : ${JAVA_HOME=@JAVA_HOME@}
 : ${R_JAVA_LD_LIBRARY_PATH=@R_JAVA_LD_LIBRARY_PATH@}
 if test -n "@R_LD_LIBRARY_PATH@"; then
--- etc/Makeconf.in
+++ etc/Makeconf.in
@@ -83,7 +83,8 @@
 ## needed to build applications linking to static libR
 MAIN_LD = @MAIN_LD@
 MAIN_LDFLAGS = @MAIN_LDFLAGS@
-MAIN_LINK = $(MAIN_LD) $(MAIN_LDFLAGS) $(LDFLAGS)
+RPATH_LDFLAGS = -Wl,-rpath,$(abs_top_builddir)/lib @RPATH_LDFLAGS@
+MAIN_LINK = $(MAIN_LD) $(MAIN_LDFLAGS) $(LDFLAGS) $(RPATH_LDFLAGS)
 MKINSTALLDIRS = "$(R_HOME)/bin/mkinstalldirs"
 OBJC = @OBJC@
 OBJCFLAGS = @OBJCFLAGS@ $(LTO)
